S1.全体のデーtの収集、データがちゃんととってこれる。穴、欠損がないか
　大きな全部の全体のデータを取ってくること
S2.素材が分かれる
　S1のデータを使って、処理をする
大きく分けて３つのデータが必要。
・ヒストリカル
・1万桁
・指標値
→対象期間をいつにするのかの話になる
３つのデータの中で共通項目を探す
－対象期間は３つの共通
－データ数が何本なのか
－足が変わると何本というのがある
－必要な計算で使うものがどこまで、（先足、今足、前足３つ）
－先足の部分の短中長があるから必要なものが決まっている
－軸が決まるとどれだけの対象範囲のデータを取ってこないといけないが決まる
　何のデータを取ってこないといけないか

※エンジンを作るときに
　第1通貨、第２通貨の組み合わせ、それが前に来たら、どうなるという
　それが何かが決まった時点で、次に何になるが決まっていればよい。
　何が軸通貨になるのかを決める
　大１通貨、大２通貨
　１個決まった時点で次に何になるかが決まる。
　・軸時間足が何と決まったら、その時間足に対して、どこの時間足まで必要なのかが出る。
　・エンジンは１個で、設定する項目は決まっているため、その設定値が何になればよいか
　　が自動で変わる。
　・１日なのか、何なのか、全部で何本あればよいという答えが出る。
　　⇒毎回やる必要がない。
　　　対象の時間、対象の周期、どこまで
　　　まずそれを分ける
※吐き出された答えが1440本あればよい（全部が持ちきれない）
　・何を軸にして、どう見るのかの大きい枠を取るという話。（ファジー、代替この辺という形でデータを大きく絞り込んでいるステップ（主が何、時間の軸は何））
　・絞るときの関係性で、どういうデータを見たいのかが分からないといけない。

基本設定（軸時間、それに付随する時間、周期）を出したうえで、どの範囲を見ますかの話し。

全体の大量のデータに対して、大きくざっくりと絞込ができる。

更新されるべきタイミングでデータの更新がされているかのチェックが必要。
データが一致しているかの確認をする
データが一致した時点で次の段階に移り、フォーマットを変えてステップを踏んでいく。

S2.３つのデータを取ってくる（ファジーデータから3つのデータを取る）
	•	ヒストリカル
1日分1分：1440本、256本、・・・。
なんの足の何の通貨の何本必要は決まっている
その数がおろしてきた数と一致するかの確認をする。
おろしてくる部分の時刻が一致していて、欠損、重複がないことの確認を取る。
中に入っているデータの条件：
－値が入ってこないのであれば、入ってこないという情報がほしい。
－基本的に、何桁で、いくつまでもらい、四捨五入するか。
－価格の大きな時系列ないでの変動はない。
（元データの中身と一致しているかの確認をする）
　　－軸通貨にいくらが入っていて、他通貨１、２にその数値が入っていればよい。
　　　リストの中と数値が一致したものが入っていれば、まず、間違いない。
　　－軸通貨の答えのボックス、他通貨の答えのボックス、が必要な時間足分入っていればよい。　⇒　基本のパッケージで考えると何個（どの時間足まで）データがあればよいのかに基づいて、持っていないといけない答えの数が一致する。
　その中で、軸通貨が何でと区分、条件が決まっている。
　大量の元データと絞り込んだものが一致していれば、正しいものが絞り込まれていることが分かる。

	•	1万桁
1万桁をjavaから受け取る。
1分、5分、15分の形でそれぞれが並んでいる。
1,5,15分の各データの数の一致。
データ分類ごとの数の一致。
総数の一致。
データ1個ずつは、0,1,2以外は入らない。
入ってこないということ。
元の1万桁ととってきているデータが一致していれば、OK。
間で追加で指標が入ってきても対応できるようにする
データはカオス状態でよい。一度そことリンクをつなげてしまえばそれでOK。
データが一致していて、ずれていないとなれば、それ以降は問題なくなる。
・必要ならタグ付けしておけばよい。

	•	指標値
・名前がついている
・価格だから、何桁目には何が入っていないといけない。
・①のチェック方法と同じ。
・大本の全データと一致している。


全体で、時間足はいくつまで
前足、今足、先足は1440ずつ、
その先は前が何本、今が何本、先が何本と絞っておいておく。
S2までで対象のデータがそろった（紐づけの部分）ことが言える

S3.加工
・RBT, BT用に加工する
・数が一緒、データの中身が一緒。
　1個前のS2のデータと一緒であることが言えればよい。（S1はS2との紐づき確認済みのため）
・RBT,BT用に処理できる形式にデータが準備できましたという状態。
RBTとBTで使用する指標の数は同じはずなので、RBTとBTの分類ごとのデータ比率の一致、中身のデータの一致が取れれば、元は同じともいえる。

チェックの仕方、どういうエンジンを作ればよいかがわかる（何が必要で、何をやるかに基づく）

軸時間、周期、通貨の切り替えによって、中身が
エンジンそのものとしては、何を取りに行く。
ルート（接続）、階層、設計の通り、元データがわかって
全部で何個のデータが出ないといけないというのはプロセスごとにあるので、ずれない。


